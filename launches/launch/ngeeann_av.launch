<?xml version="1.0"?>

<!-- ngeeann_av.launch -->
<!-- This launch file launches the latest work of fyp-moovita. -->

<launch>

	<!-- Vehicle Parameters -->
	<arg name="x" default="0.0"/>
	<arg name="y" default="0.0"/>
	<arg name="z" default="0.0"/>
	<arg name="roll" default="0.0"/>
	<arg name="pitch" default="0.0"/>
	<arg name="yaw" default="0.0"/>
	<arg name="model" default="ngeeann_av"/>
	<arg name="namespace" default="/ngeeann_av"/>
	<arg name="base_frame" default="base_link"/>

	<!-- Waypoints Parameters -->
	<arg name="file_name" default="waypoints.csv"/>

	<!-- LiDAR Parameters -->
	<arg name="max_range" default="30.0"/>
	<arg name="max_usable_range" default="29.9"/>

	<!-- RViz launcher -->
	<include file="$(find ngeeann_av_description)/launch/display.launch"/>

	<!-- Vehicle Spawner -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="
	-urdf -param robot_description -model $(arg model)
	-gazebo_namespace /ngeeann_av/gazebo
	-x $(arg x) -y $(arg y) -z $(arg z)
	-R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

	<!-- Robot_description is used by nodes that publish to joint_states. -->
  	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find ngeeann_av_description)/urdf/ngeeann_av.xacro"/> 

    <!-- Read joint positions from joint_states, then publish the vehicle's state to tf. -->
    <node name="vehicle_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="$(arg namespace)">
      	<param name="publish_frequency" value="30.0"/>
    </node>

	<!-- Joint Controllers node -->
  	<node name="controller_spawner" pkg="controller_manager" type="spawner" args="$(find ngeeann_av_gazebo)/config/controller.yaml" ns="$(arg namespace)"/>

	<!-- Ackermann Controller node -->
	<node name="ackermann_controller" pkg="ngeeann_av_gazebo" type="ackermann_controller.py" ns="$(arg namespace)">
		<param name="cmd_timeout" value="0.5"/>
		<rosparam file="$(find ngeeann_av_gazebo)/config/ackermann_params.yaml" command="load"/>
	</node>

	<!-- Gmapping Node
	<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
		<param name="inverted_laser" value="false"/>
		<param name="throttle_scans" value="1"/>
		<param name="base_frame" value="$(arg base_frame)"/>
		<param name="map_frame" value="map"/>
		<param name="odom_frame" value="odom"/>
		<param name="map_update_interval" value="5.0"/>
		<param name="maxUrange" value="$(arg max_usable_range)"/>
		<param name="sigma" value="0.05"/>
		<param name="kernelSize" value="1"/>
		<param name="lstep" value="0.05"/>
		<param name="astep" value="0.05"/>
		<param name="iterations" value="5"/>
		<param name="lsigma" value="0.075"/>
		<param name="ogain" value="3.0"/>
		<param name="lskip" value="0"/>
		<param name="minimumScore" value="0"/>
		<param name="srr" value="0.1"/>
		<param name="srt" value="0.2"/>
		<param name="str" value="0.1"/>
		<param name="stt" value="0.2"/>
		<param name="linearUpdate" value="1.0"/>
		<param name="angularUpdate" value="0.5"/>
		<param name="temporalUpdate" value="-1.0"/>
		<param name="resampleThreshold" value="0.5"/>
		<param name="particles" value="30"/>
		<param name="xmin" value="-100.0"/>
		<param name="ymin" value="-100.0"/>
		<param name="xmax" value="100.0"/>
		<param name="ymax" value="100.0"/>
		<param name="delta" value="0.05"/>
		<param name="llsamplerange" value="0.01"/>
		<param name="llsamplestep" value="0.01"/>
		<param name="lasamplerange" value="0.005"/>
		<param name="lasamplestep" value="0.005"/>
		<param name="transform_publish_period" value="0.05"/>
		<param name="occ_thresh" value="0.25"/>
		<param name="maxRange" value="$(arg max_range)"/>
	</node> -->

	<!-- Localisation node -->
	<node name="localisation" pkg="ngeeann_av_nav" type="localisation.py"/>

	<!-- Local Path Planner node -->
	<node name="local_planner" pkg="ngeeann_av_nav" type="localplanner.py"/>

	<!-- Global Path Planner node -->
	<param name="waypoints" type="string" value="$(find ngeeann_av_nav)/scripts/$(arg file_name)"/>
	<node name="global_planner" pkg="ngeeann_av_nav" type="globalplanner.py"/>

	<!-- Navigation parameters -->
	<rosparam file="$(find ngeeann_av_nav)/config/navigation_params.yaml"/>

	<group ns="$(arg namespace)">

		<!-- Gazebo world -->
		<include file="$(find gazebo_ros)/launch/empty_world.launch">
			<arg name="world_name" value="$(find ngeeann_av_description)/worlds/test_track.world"/>
			<arg name="paused" value="false"/>
			<arg name="use_sim_time" value="true"/>
			<arg name="gui" value="true"/>
			<arg name="headless" value="false"/>
			<arg name="debug" value="false"/>
		</include>

	</group>

</launch>
